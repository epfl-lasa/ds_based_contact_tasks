# Use ubuntu trusty (14.04) with sudo privileges.
dist: trusty
sudo: required
language:
  - c++
cache:
  - apt

# By default travis runs all python code in a virtualenv that does not contain
# the packages installed with apt-get. As this is essential (pip doesn't contain
# all the necessary ROS python packages), tell travis-ci to use the system-wide
# python packages.
virtualenv:
    system_site_packages: true

################################################################################

# Install system dependencies, namely ROS.
before_install:
  # Define some config vars.
  - export ROS_DISTRO=indigo
  - export ROS_CI_DESKTOP=`lsb_release -cs`  # e.g. [precise|trusty]
  - export CI_SOURCE_PATH=$(pwd)
  - export ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
  - export CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
  - export ROS_PARALLEL_JOBS='-j8 -l6'
  # Install ROS
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  # Install ROS
  - sudo apt-get install -y ros-$ROS_DISTRO-desktop-full python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin ros-$ROS_DISTRO-ros ros-$ROS_DISTRO-rospy ros-$ROS_DISTRO-rostest
  - sudo apt-get install ros-$ROS_DISTRO-control-toolbox ros-$ROS_DISTRO-controller-interface ros-$ROS_DISTRO-controller-manager ros-$ROS_DISTRO-joint-limits-interface ros-$ROS_DISTRO-transmission-interface ros-$ROS_DISTRO-forward-command-controller
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Setup for rosdep
  - sudo rosdep init
  - rosdep update

# Create a catkin workspace with the package under test.
install:
  - mkdir -p ~/catkin_ws/src
  - cd ~/catkin_ws/src
  - catkin_init_workspace

  # Create the devel/setup.bash (run catkin_make with an empty workspace) and
  # source it to set the path variables.
  - cd ~/catkin_ws
  - catkin_make
  - source devel/setup.bash

  # Add the package under test to the workspace.
  - cd ~/catkin_ws/src
  - ln -s $CI_SOURCE_PATH . # Link the repo we are testing to the new workspace


# Install all dependencies, using wstool and rosdep.
# wstool looks for a ROSINSTALL_FILE defined in before_install.
before_script:
  # source dependencies: install using wstool.
  - cd ~/catkin_ws/src
  - source force_based_ds_modulation/install_dependencies.sh

# Compile and test.
script:
  - cd ~/catkin_ws
  # If the CATKIN_OPTIONS file exists, use it as an argument to catkin_make
  - catkin_make $( [ -f $CATKIN_OPTIONS ] && cat $CATKIN_OPTIONS )